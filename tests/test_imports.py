"""
Test imports to ensure all modules can be imported correctly
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))


def test_config_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        from src.config.settings import Settings, get_settings, CurrencyPair
        from src.config.constants import Timeframe, SystemStatus, NotificationType
        print("‚úÖ Config imports successful")
        return True
    except Exception as e:
        print(f"‚ùå Config imports failed: {e}")
        return False


def test_core_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    try:
        from src.core.database import DatabaseManager
        from src.core.mt5_client import MT5Client
        from src.core.telegram_notifier import TelegramNotifier
        print("‚úÖ Core imports successful")
        return True
    except Exception as e:
        print(f"‚ùå Core imports failed: {e}")
        return False


def test_data_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from src.data.real_time_updater import RealTimeDataUpdater
        from src.data.historical_loader import HistoricalDataLoader
        from src.data.candle_processor import CandleProcessor
        print("‚úÖ Data imports successful")
        return True
    except Exception as e:
        print(f"‚ùå Data imports failed: {e}")
        return False


def test_utils_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ —É—Ç–∏–ª–∏—Ç"""
    try:
        from src.utils.logging import setup_logging, get_logger
        from src.utils.helpers import parse_datetime, format_datetime, get_utc_now
        print("‚úÖ Utils imports successful")
        return True
    except Exception as e:
        print(f"‚ùå Utils imports failed: {e}")
        return False


def test_package_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞"""
    try:
        from src import (
            Settings, get_settings, CurrencyPair, Timeframe, SystemStatus,
            DatabaseManager, MT5Client, TelegramNotifier,
            RealTimeDataUpdater, HistoricalDataLoader, CandleProcessor,
            setup_logging, get_logger
        )
        print("‚úÖ Package imports successful")
        return True
    except Exception as e:
        print(f"‚ùå Package imports failed: {e}")
        return False


def test_basic_settings():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    try:
        from src.config.settings import Settings
        
        # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        settings = Settings(
            postgres_password="test",
            mt5_terminal_path="test",
            telegram_token="test",
            telegram_chat_id="test"
        )
        print(f"‚úÖ Basic settings created: {len(settings.currency_pairs)} pairs, {len(settings.active_timeframes)} timeframes")
        return True
    except Exception as e:
        print(f"‚ùå Basic settings creation failed: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ Testing imports...")
    print("=" * 50)
    
    tests = [
        test_config_imports,
        test_core_imports,
        test_data_imports,
        test_utils_imports,
        test_package_imports,
        test_basic_settings
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
        print()
    
    print("=" * 50)
    print(f"üìä Test results: {passed}/{total} passed")
    
    if passed == total:
        print("üéâ All tests passed! Project structure is correct.")
        return True
    else:
        print("‚ùå Some tests failed. Check the errors above.")
        return False


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 